import React,{useRef,useEffect,useMemo,useCallback} from 'react'
import {useFrame,useThree} from '@react-three/fiber'
import * as THREE from 'three'
import {EffectComposer,Bloom,DepthOfField,SSAO} from '@react-three/postprocessing'
import {useGLTF,useHelper} from '@react-three/drei'
import {three3DHelpersUtil} from 'src/utils/three-helpers'
import {use3DAnimation} from 'src/hooks/use3DAnimation'
import {ComponentBaseProps} from 'src/types'
interface AdvancedSceneProps extends ComponentBaseProps{modelPath:string;intensity?:number;bloomThreshold?:number;bloomIntensity?:number;depthOfFieldDistance?:number;depthOfFieldLength?:number;depthOfFieldScale?:number
}export const AdvancedScene:React.FC<AdvancedSceneProps>=({modelPath,intensity=1,bloomThreshold=0.85,bloomIntensity=0.6,depthOfFieldDistance=0,depthOfFieldLength=0.02,depthOfFieldScale=2,style,className,...restProps})=>{const sceneRef=useRef<THREE.Scene>(null)const bloomPassRef=useRef<any>(null)const directionalLightRef=useRef<THREE.DirectionalLight>(null)const gltf=useGLTF(modelPath)as any\nconst{scene,camera,gl,size,viewport}=useThree()\nuseEffect(()=>{if(!sceneRef.current||!gltf?.scene)return;sceneRef.current.add(gltf.scene);return()=>{sceneRef.current?.remove(gltf.scene)}},[scene,gltf])\nuseEffect(()=>{if(directionalLightRef.current){const helper=new THREE.DirectionalLightHelper(directionalLightRef.current,5);scene.add(helper);return()=>{scene.remove(helper)}}},[scene,directionalLightRef.current])\nuseFrame(()=>{if(bloomPassRef.current){bloomPassRef.current.threshold=bloomThreshold;bloomPassRef.current.intensity=bloomIntensity}});const threeScene=useMemo(()=>{const newScene=new THREE.Scene();newScene.background=new THREE.Color('#1e88e5');return newScene},[]);return(<>{threeScene&&(<ambientLightintensity={0.5}/>)}{directionalLightRef.current&&(<directionalLightref={directionalLightRef}position={[10,10,10]}intensity={0.8}castShadowshadow-mapSize-width={1024}shadow-mapSize-height={1024}shadow-camera-near={0.1}shadow-camera-far={50}/>)}<EffectComposer><Bloomref={bloomPassRef}luminanceThreshold={bloomThreshold}luminanceSmoothing={0.9}intensity={bloomIntensity}/><DepthOfFieldfocusDistance={depthOfFieldDistance}focalLength={depthOfFieldLength}bokehScale={depthOfFieldScale}height={480}/></EffectComposer></>)}