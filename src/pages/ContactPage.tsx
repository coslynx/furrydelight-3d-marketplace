import React,{useState,useCallback} from 'react'
import {MinimalLayout} from 'src/components/layout/MinimalLayout'
import 'src/styles/pages/contact.css'
import type {ComponentBaseProps} from 'src/types'
interface ContactPageProps extends ComponentBaseProps{}interface FormState{name:string;email:string;message:string}const ContactPage:React.FC<ContactPageProps>=({className='',style})=>{const[form,setForm]=useState<FormState>({name:'',email:'',message:''})const[formErrors,setFormErrors]=useState<{name:string,email:string,message:string}>({name:'',email:'',message:''})const[successMessage,setSuccessMessage]=useState<string|null>(null)const[errorMessage,setErrorMessage]=useState<string|null>(null)const handleChange=useCallback((e:React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement>)=>{const{name,value}=e.target;setForm({...form,[name]:value})},[setForm])const validateForm=()=>{let isValid=true;const errors={name:'',email:'',message:''};if(!form.name){errors.name='Name is required';isValid=false}if(!form.email){errors.email='Email is required';isValid=false}else if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(form.email)){errors.email='Invalid email format';isValid=false}if(!form.message){errors.message='Message is required';isValid=false}setFormErrors(errors);return isValid}const handleSubmit=useCallback(async(e:React.FormEvent)=>{e.preventDefault();if(validateForm()){try{console.log('Form submitted:',form)setSuccessMessage('Form submitted successfully!')setErrorMessage(null)setForm({name:'',email:'',message:''})}catch(error:any){setErrorMessage('Failed to submit the form. Please try again.')setSuccessMessage(null)}}else{setErrorMessage('Please correct the errors below.')setSuccessMessage(null)}},[form,validateForm])return(<MinimalLayoutshowBackButtonbackButtonHref='/'><divclassName={`contact-page ${className}`}style={style}><sectionclassName="bg-white py-16 px-4"><divclassName="container mx-auto max-w-2xl"><h1className="text-3xl font-semibold text-gray-800 mb-8">Contact Us</h1>{successMessage&&(<divclassName="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4"role="alert"><strongclassName="font-bold">Success!</strong><spanclassName="block sm:inline">{successMessage}</span></div>)}{errorMessage&&(<divclassName="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4"role="alert"><strongclassName="font-bold">Error!</strong><spanclassName="block sm:inline">{errorMessage}</span></div>)}<formonSubmit={handleSubmit}className="space-y-6"><divclassName="form-group"><labelfor="name"className="block text-gray-700 text-sm font-bold mb-2">Name:</label><inputtype="text"id="name"name="name"value={form.name}onChange={handleChange}className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${formErrors.name?'border-red-500':''}`}/>{formErrors.name&&(<pclassName="text-red-500 text-xs italic">{formErrors.name}</p>)}</div><divclassName="form-group"><labelfor="email"className="block text-gray-700 text-sm font-bold mb-2">Email:</label><inputtype="email"id="email"name="email"value={form.email}onChange={handleChange}className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${formErrors.email?'border-red-500':''}`}/>{formErrors.email&&(<pclassName="text-red-500 text-xs italic">{formErrors.email}</p>)}</div><divclassName="form-group"><labelfor="message"className="block text-gray-700 text-sm font-bold mb-2">Message:</label><textareaid="message"name="message"value={form.message}onChange={handleChange}rows={5}className={`shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline ${formErrors.message?'border-red-500':''}`}></textarea>{formErrors.message&&(<pclassName="text-red-500 text-xs italic">{formErrors.message}</p>)}</div><divclassName="form-group"><buttonclassName="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"type="submit">Submit</button></div></form></div></section></div></MinimalLayout>)}export default ContactPage